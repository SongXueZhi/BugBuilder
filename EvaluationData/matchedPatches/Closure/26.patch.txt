/Users/SE4Test/Downloads/checkout/Closure+26+_fix/src
diff --git a/Users/SE4Test/Downloads/checkout/closure_26_fix/src/com/google/javascript/jscomp/ProcessCommonJSModules.java b/Users/SE4Test/Downloads/checkout/closure_26_buggy/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
index fa01cd9..1744a58 100644
--- a/Users/SE4Test/Downloads/checkout/closure_26_fix/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
+++ b/Users/SE4Test/Downloads/checkout/closure_26_buggy/src/com/google/javascript/jscomp/ProcessCommonJSModules.java
@@ -125,7 +125,6 @@ public class ProcessCommonJSModules implements CompilerPass {
      AbstractPostOrderCallback {

    private int scriptNodeCount = 0;
[-    private Set<String> modulesWithExports = Sets.newHashSet();-]

    @Override
    public void visit(NodeTraversal t, Node n, Node parent) {
@@ -205,9 +204,6 @@ public class ProcessCommonJSModules implements CompilerPass {
     */
    private void emitOptionalModuleExportsOverride(Node script,
        String moduleName) {
[-      if (!modulesWithExports.contains(moduleName)) {-]
[-        return;-]
[-      }-]

      Node moduleExportsProp = IR.getprop(IR.name(moduleName),
          IR.string("module$exports"));
@@ -229,7 +225,6 @@ public class ProcessCommonJSModules implements CompilerPass {
      Node exports = prop.getChildAtIndex(1);
      exports.putProp(Node.ORIGINALNAME_PROP, "exports");
      exports.setString("module$exports");
[-      modulesWithExports.add(moduleName);-]
    }

    /**